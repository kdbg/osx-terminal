" common set
set viminfofile=NONE
if isdirectory(expand("~/.vimtmp"))
set backupdir=~/.vimtmp
set directory=~/.vimtmp
endif
" t clipboard=unnamed
set number
set autoindent
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set cindent
" t mouse=nich
" t mouse=a
set colorcolumn=79
set cursorline
set autowrite
set hlsearch
set incsearch
set nobackup
set nowrap
set foldenable
set foldmethod=syntax
set foldlevel=99
set fileencodings=utf-8,gbk
let mapleader=';'
nnoremap <leader>n :bn<CR>
nnoremap <leader>p :bp<CR>
nnoremap <leader>x :bd<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>w :w<CR>

" vbundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" nerdtree
Plugin 'scrooloose/nerdtree'
let NERDTreeWinSize=30
let NERDTreeHighlightCursorline=1
let NERDTreeMinimalUI=1
map <F11> :NERDTreeToggle<CR>
nnoremap <leader>t :NERDTreeToggle<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" tagbar
Plugin 'majutsushi/tagbar'
let g:tagbar_width=30
let g:tagbar_autofocus=1
let g:tagbar_compact=1
map <F12> :TagbarToggle<CR>
noremap <leader>f :TagbarToggle<CR>

" vim-fugitive
Plugin 'tpope/vim-fugitive'

" vim-airline
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
set laststatus=2
let g:airline_theme="wombat"
let g:airline_powerline_fonts=0
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
let g:airline#extensions#tabline#formatter='unique_tail'
let g:airline#extensions#whitespace#enabled=0
if !exists('g:airline_symbols')
    let g:airline_symbols={}
endif
let g:airline_symbols.linenr=' : '
let g:airline_symbols.colnr=' : '
let g:airline_symbols.maxlinenr=''

" Visual-Mark
Plugin 'vim-scripts/Visual-Mark'

" vim-dirdiff
Plugin 'will133/vim-dirdiff'

" hexmode
Plugin 'fidian/hexmode'

" awesome-vim-colorschemes
Plugin 'rafi/awesome-vim-colorschemes'

" vim-cpp-enhanced-higlight
Plugin 'octol/vim-cpp-enhanced-highlight'
let g:cpp_class_scope_highlight=1
let g:cpp_experimental_template_highlight=1
let g:cpp_concepts_highlight=1
let c_no_curly_error=1

" derekwyatt/vim-fswitch
Plugin 'derekwyatt/vim-fswitch'
nnoremap <silent> <Leader>oa :FSHere<cr>
nnoremap <silent> <Leader>or :FSSplitRight<cr>
nnoremap <silent> <Leader>ol :FSSplitLeft<cr>

" vimcdoc
Plugin 'vimchina/vimcdoc'

" vim-syntax-x86-objdump-d
Plugin 'shiracamus/vim-syntax-x86-objdump-d'

" vim-linux-coding-style
Plugin 'vivien/vim-linux-coding-style'
let g:linuxsty_patterns=[expand("~/OSCode/Linux/")]

call vundle#end()
filetype plugin indent on

" colorscheme
syntax on
function! s:RandomInt(max)
    let l:seed = srand()
    return rand(l:seed) % abs(a:max)
endfunction

function! s:RandomScheme()
    " colorscheme, background, airline_theme, powerline_fonts
    let l:scheme = [
        \ ['molokai',         'dark',  'wombat',         0],
        \ ['PaperColor',      'light', 'papercolor',     0],
        \ ['angr',            'dark',  'angr',           0],
        \ ['hybrid_material', 'light', 'sol',            0],
        \ ['jellybeans',      'dark',  'jellybeans',     0],
        \ ['lucius',          'dark',  'lucius',         0],
        \ ['minimalist',      'dark',  'minimalist',     0],
        \ ['molokayo',        'dark',  'wombat',         0],
        \ ['onedark',         'dark',  'onedark',        0],
        \ ['onehalfdark',     'dark',  'onehalfdark',    0],
        \ ['onehalflight',    'light', 'onehalflight',   0],
        \ ['seoul256',        'dark',  'seoul256',       0],
        \ ['seoul256-light',  'light', 'sol',            0],
        \ ['snow',            'dark',  'wombat',         0],
        \ ['sonokai',         'light', 'sonokai',        0],
        \ ['spacecamp_lite',  'dark',  'wombat',         0],
        \ ['stellarized',     'light', 'sol',            0],
        \ ['termschool',      'dark',  'wombat',         0],
    \]

    let l:index = s:RandomInt(len(l:scheme))
    " echo 'colorscheme=' . l:scheme[l:index][0] . ' background=' . l:scheme[l:index][1] . ' airelinetheme=' . l:scheme[l:index][2] . ' airlinefont=' . l:scheme[l:index][3]
    execute 'set background=' . l:scheme[l:index][1]
    execute 'colorscheme ' . l:scheme[l:index][0]
    let g:airline_theme= l:scheme[l:index][2]
    if l:scheme[l:index][3] == 1
        let g:airline_powerline_fonts=1
    endif
endfunction
if isdirectory(expand("~/.vim/bundle/awesome-vim-colorschemes"))
    call s:RandomScheme()
endif

" ctags
set tags=tags,./tags,~/.tags/include.tags

" cscope
set csto=0
set cst
" t cspc=3
set csverb
if filereadable(expand("~/.cscope/include.cscope"))
    cs add ~/.cscope/include.cscope
endif
if filereadable(".cscope.out")
    cs add .cscope.out
endif
set nocsverb
set cscopequickfix=a-,c-,d-,e-,f-,g-,i-,s-,t-
nnoremap <C-n> :cnext<CR>
nnoremap <C-p> :cprev<CR> 
nnoremap <leader>cc :cs find c <C-R>=expand("<cword>")<CR><CR>
nnoremap <leader>cs :cs find s <C-R>=expand("<cword>")<CR><CR>
nnoremap <leader>cg :cs find g <C-R>=expand("<cword>")<CR><CR>
nnoremap <leader>ce :cs find e <C-R>=expand("<cword>")<CR><CR>

iab /// //////////////////////////////////////////////////////////////////////////////<CR><BS><BS>
